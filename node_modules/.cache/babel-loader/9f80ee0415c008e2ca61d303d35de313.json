{"ast":null,"code":"var _jsxFileName = \"/Users/ren112/bootcamp4/src/components/AddBuilding.js\";\nimport React from 'react';\n\nclass AddBuilding extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      code: \"\",\n      address: \"\",\n      coordinates: {\n        latitude: 0,\n        longitude: 0\n      }\n    };\n  }\n\n  nameUpdate() {\n    const val = this.myValue.value;\n    console.log(val);\n    console.log(\"test\"); //Here you will need to update the value of the filter with the value from the textbox\n    //this.setState({\n    //  name: val\n    //})\n  }\n\n  render() {\n    if (this.props.showNew) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Building Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Type to Filter\",\n        ref: value => {\n          this.myValue = value;\n        },\n        onChange: this.nameUpdate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Building Code\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Type code of new building\",\n        ref: value => {\n          this.myValue = value;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Building Address\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Type address of new building\",\n        ref: value => {\n          this.myValue = value;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        onClick: () => this.props.newViewUpdate(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add this Building\"));\n    } else {\n      return React.createElement(\"p\", {\n        onClick: () => this.props.newViewUpdate(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Add Building\");\n    }\n  }\n\n}\n\nexport default AddBuilding;","map":{"version":3,"sources":["/Users/ren112/bootcamp4/src/components/AddBuilding.js"],"names":["React","AddBuilding","Component","constructor","props","state","name","code","address","coordinates","latitude","longitude","nameUpdate","val","myValue","value","console","log","render","showNew","bind","newViewUpdate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAE,CADC;AAEXC,QAAAA,SAAS,EAAE;AAFA;AAJJ,KAAb;AASH;;AACGC,EAAAA,UAAU,GAAG;AACT,UAAMC,GAAG,GAAG,KAAKC,OAAL,CAAaC,KAAzB;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACMG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAHS,CAKT;AACA;AACE;AACF;AACH;;AACDC,EAAAA,MAAM,GAAG;AACT,QAAG,KAAKd,KAAL,CAAWe,OAAd,EAAsB;AAClB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,GAAG,EAAKJ,KAAD,IAAS;AAAC,eAAKD,OAAL,GAAeC,KAAf;AAAqB,SAH1C;AAII,QAAA,QAAQ,EAAE,KAAKH,UAAL,CAAgBQ,IAAhB,CAAqB,IAArB,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARJ,EASI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,2BAFhB;AAGI,QAAA,GAAG,EAAKL,KAAD,IAAS;AAAC,eAAKD,OAAL,GAAeC,KAAf;AAAqB,SAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAdJ,EAeI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,8BAFhB;AAGI,QAAA,GAAG,EAAKA,KAAD,IAAS;AAAC,eAAKD,OAAL,GAAeC,KAAf;AAAqB,SAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CAFJ,EAuBI;AACA,QAAA,OAAO,EAAE,MAAI,KAAKX,KAAL,CAAWiB,aAAX,CAAyB,KAAzB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAvBJ,CADJ;AA+BH,KAhCD,MAiCI;AACA,aACI;AACI,QAAA,OAAO,EAAE,MAAI,KAAKjB,KAAL,CAAWiB,aAAX,CAAyB,IAAzB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ;AAOH;AACJ;;AAlEqC;;AAqE1C,eAAepB,WAAf","sourcesContent":["import React from 'react';\n\nclass AddBuilding extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            code: \"\",\n            address: \"\",\n            coordinates: {\n              latitude: 0,\n              longitude: 0\n        }\n    }\n    }\n        nameUpdate() {\n            const val = this.myValue.value;\n\t\t    console.log(val);\n            console.log(\"test\");\n            \n            //Here you will need to update the value of the filter with the value from the textbox\n            //this.setState({\n              //  name: val\n            //})\n        }\n        render() {\n        if(this.props.showNew){\n            return(\n                <div>\n                    \n                    <form>\n                        <p>Building Name</p>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Type to Filter\" \n                            ref = {(value)=>{this.myValue = value}}\n                            onChange={this.nameUpdate.bind(this)}\n                        />\n                        <p>Building Code</p>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Type code of new building\" \n                            ref = {(value)=>{this.myValue = value}}\n                        />\n                        <p>Building Address</p>\n                        <input \n                            type=\"text\" \n                            placeholder=\"Type address of new building\" \n                            ref = {(value)=>{this.myValue = value}}\n                        />\n                    </form>\n                    <p\n                    onClick={()=>this.props.newViewUpdate(false)}\n                    >\n                        Add this Building\n                    </p>\n                </div>\n            );\n        }\n        else{\n            return(\n                <p\n                    onClick={()=>this.props.newViewUpdate(true)}\n                >\n                    Add Building\n                </p>\n            )\n        }\n    }\n}\n\nexport default AddBuilding;"]},"metadata":{},"sourceType":"module"}