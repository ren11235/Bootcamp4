{"ast":null,"code":"var _jsxFileName = \"/Users/ren112/bootcamp4/src/components/AddBuilding.js\";\nimport React from 'react';\n\nclass AddBuilding extends React.Component {\n  filterUpdate() {\n    //Here you will need to update the value of the filter with the value from the textbox\n    const val = this.myValue.value;\n    console.log(val);\n  }\n\n  render() {\n    //You will need to save the value from the textbox and update it as it changes\n    //You will need the onChange value for the input tag to capture the textbox value\n    if (this.props.showNew) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Type to Filter\",\n        ref: value => {\n          this.myValue = value;\n        },\n        onChange: this.filterUpdate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Type address of new building\",\n        ref: value => {\n          this.myValue = value;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        onClick: () => this.props.newViewUpdate(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Add this Building\"));\n    } else {\n      return React.createElement(\"p\", {\n        onClick: () => this.props.newViewUpdate(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Add Building\");\n    }\n  }\n\n}\n\nexport default AddBuilding;","map":{"version":3,"sources":["/Users/ren112/bootcamp4/src/components/AddBuilding.js"],"names":["React","AddBuilding","Component","filterUpdate","val","myValue","value","console","log","render","props","showNew","bind","newViewUpdate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAEtCC,EAAAA,YAAY,GAAG;AACX;AACA,UAAMC,GAAG,GAAG,KAAKC,OAAL,CAAaC,KAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH;;AACDK,EAAAA,MAAM,GAAG;AACL;AACA;AACA,QAAG,KAAKC,KAAL,CAAWC,OAAd,EAAsB;AAClB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,GAAG,EAAKL,KAAD,IAAS;AAAC,eAAKD,OAAL,GAAeC,KAAf;AAAqB,SAH1C;AAII,QAAA,QAAQ,EAAE,KAAKH,YAAL,CAAkBS,IAAlB,CAAuB,IAAvB,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI;AACQ,QAAA,IAAI,EAAC,MADb;AAEQ,QAAA,WAAW,EAAC,8BAFpB;AAGQ,QAAA,GAAG,EAAKN,KAAD,IAAS;AAAC,eAAKD,OAAL,GAAeC,KAAf;AAAqB,SAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADA,EAcA;AACA,QAAA,OAAO,EAAE,MAAI,KAAKI,KAAL,CAAWG,aAAX,CAAyB,KAAzB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAdA,CADJ;AAsBH,KAvBD,MAwBI;AACA,aACA;AACI,QAAA,OAAO,EAAE,MAAI,KAAKH,KAAL,CAAWG,aAAX,CAAyB,IAAzB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA;AAMH;AACJ;;AA1CqC;;AA4C1C,eAAeZ,WAAf","sourcesContent":["import React from 'react';\n\nclass AddBuilding extends React.Component {\n\n    filterUpdate() {\n        //Here you will need to update the value of the filter with the value from the textbox\n        const val = this.myValue.value;\n        console.log(val)\n    }\n    render() {\n        //You will need to save the value from the textbox and update it as it changes\n        //You will need the onChange value for the input tag to capture the textbox value\n        if(this.props.showNew){\n            return (\n                <div>\n                <form>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Type to Filter\" \n                        ref = {(value)=>{this.myValue = value}}\n                        onChange={this.filterUpdate.bind(this)}\n                    />\n                    <input \n                            type=\"text\" \n                            placeholder=\"Type address of new building\" \n                            ref = {(value)=>{this.myValue = value}}\n                        />\n                </form>\n                <p\n                onClick={()=>this.props.newViewUpdate(false)}\n                >\n                    Add this Building\n                </p>\n                </div>\n            );\n        }\n        else{\n            return(\n            <p\n                onClick={()=>this.props.newViewUpdate(true)}\n            >\n                Add Building\n            </p>);\n        }\n    }\n}\nexport default AddBuilding;"]},"metadata":{},"sourceType":"module"}