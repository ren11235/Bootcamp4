{"ast":null,"code":"var _jsxFileName = \"/Users/ren112/bootcamp4/src/components/AddBuilding.js\";\nimport React from 'react';\n\nclass AddBuilding extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      code: \"\",\n      address: \"\",\n      coordinates: {\n        latitude: 0,\n        longitude: 0\n      }\n    };\n  }\n\n  nameUpdate() {\n    //Here you will need to update the value of the filter with the value from the textbox\n    const val = this.myValue1.value;\n    console.log(val);\n    this.setState({\n      name: val\n    });\n  }\n\n  codeUpdate() {\n    //Here you will need to update the value of the filter with the value from the textbox\n    const val = this.myValue1.value;\n    console.log(val);\n    this.setState({\n      code: val\n    });\n  }\n\n  render() {\n    //You will need to save the value from the textbox and update it as it changes\n    //You will need the onChange value for the input tag to capture the textbox value\n    if (this.props.showNew) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Type to Filter\",\n        ref: value => {\n          this.myValue1 = value;\n        },\n        onChange: this.nameUpdate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Type address of new building\",\n        ref: value => {\n          this.myValue2 = value;\n        },\n        onChange: this.codeUpdate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        onClick: () => this.props.newViewUpdate(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add this Building\"));\n    } else {\n      return React.createElement(\"p\", {\n        onClick: () => this.props.newViewUpdate(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Add Building\");\n    }\n  }\n\n}\n\nexport default AddBuilding;","map":{"version":3,"sources":["/Users/ren112/bootcamp4/src/components/AddBuilding.js"],"names":["React","AddBuilding","Component","constructor","props","state","name","code","address","coordinates","latitude","longitude","nameUpdate","val","myValue1","value","console","log","setState","codeUpdate","render","showNew","bind","myValue2","newViewUpdate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAE,CADC;AAEXC,QAAAA,SAAS,EAAE;AAFA;AAJJ,KAAb;AASH;;AACDC,EAAAA,UAAU,GAAG;AACT;AACA,UAAMC,GAAG,GAAG,KAAKC,QAAL,CAAcC,KAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,SAAKK,QAAL,CAAc;AACVZ,MAAAA,IAAI,EAAEO;AADI,KAAd;AAGH;;AACDM,EAAAA,UAAU,GAAG;AACT;AACA,UAAMN,GAAG,GAAG,KAAKC,QAAL,CAAcC,KAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,SAAKK,QAAL,CAAc;AACVX,MAAAA,IAAI,EAAEM;AADI,KAAd;AAGH;;AACDO,EAAAA,MAAM,GAAG;AACL;AACA;AACA,QAAG,KAAKhB,KAAL,CAAWiB,OAAd,EAAsB;AAClB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,GAAG,EAAKN,KAAD,IAAS;AAAC,eAAKD,QAAL,GAAgBC,KAAhB;AAAsB,SAH3C;AAII,QAAA,QAAQ,EAAE,KAAKH,UAAL,CAAgBU,IAAhB,CAAqB,IAArB,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI;AACQ,QAAA,IAAI,EAAC,MADb;AAEQ,QAAA,WAAW,EAAC,8BAFpB;AAGQ,QAAA,GAAG,EAAKP,KAAD,IAAS;AAAC,eAAKQ,QAAL,GAAgBR,KAAhB;AAAsB,SAH/C;AAIQ,QAAA,QAAQ,EAAE,KAAKI,UAAL,CAAgBG,IAAhB,CAAqB,IAArB,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADA,EAeA;AACA,QAAA,OAAO,EAAE,MAAI,KAAKlB,KAAL,CAAWoB,aAAX,CAAyB,KAAzB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAfA,CADJ;AAuBH,KAxBD,MAyBI;AACA,aACA;AACI,QAAA,OAAO,EAAE,MAAI,KAAKpB,KAAL,CAAWoB,aAAX,CAAyB,IAAzB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA;AAMH;AACJ;;AAjEqC;;AAmE1C,eAAevB,WAAf","sourcesContent":["import React from 'react';\n\nclass AddBuilding extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            code: \"\",\n            address: \"\",\n            coordinates: {\n              latitude: 0,\n              longitude: 0\n            }\n        };\n    }\n    nameUpdate() {\n        //Here you will need to update the value of the filter with the value from the textbox\n        const val = this.myValue1.value;\n        console.log(val)\n        this.setState({\n            name: val\n        })\n    }\n    codeUpdate() {\n        //Here you will need to update the value of the filter with the value from the textbox\n        const val = this.myValue1.value;\n        console.log(val)\n        this.setState({\n            code: val\n        })\n    }\n    render() {\n        //You will need to save the value from the textbox and update it as it changes\n        //You will need the onChange value for the input tag to capture the textbox value\n        if(this.props.showNew){\n            return (\n                <div>\n                <form>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Type to Filter\" \n                        ref = {(value)=>{this.myValue1 = value}}\n                        onChange={this.nameUpdate.bind(this)}\n                    />\n                    <input \n                            type=\"text\" \n                            placeholder=\"Type address of new building\" \n                            ref = {(value)=>{this.myValue2 = value}}\n                            onChange={this.codeUpdate.bind(this)}\n                        />\n                </form>\n                <p\n                onClick={()=>this.props.newViewUpdate(false)}\n                >\n                    Add this Building\n                </p>\n                </div>\n            );\n        }\n        else{\n            return(\n            <p\n                onClick={()=>this.props.newViewUpdate(true)}\n            >\n                Add Building\n            </p>);\n        }\n    }\n}\nexport default AddBuilding;"]},"metadata":{},"sourceType":"module"}