{"ast":null,"code":"var _jsxFileName = \"/Users/ren112/bootcamp4/src/components/Search.js\";\nimport React from 'react';\n\nclass Search extends React.Component {\n  filterUpdate() {\n    //Here you will need to update the value of the filter with the value from the textbox\n    const val = this.myValue.value;\n    console.log(val);\n    this.props.filterUpdate(val);\n  }\n\n  render() {\n    //You will need to save the value from the textbox and update it as it changes\n    //You will need the onChange value for the input tag to capture the textbox value\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type to Filter\",\n      ref: value => {\n        this.myValue = value;\n      },\n      onChange: this.filterUpdate.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/ren112/bootcamp4/src/components/Search.js"],"names":["React","Search","Component","filterUpdate","val","myValue","value","console","log","props","render","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACpCC,EAAAA,YAAY,GAAG;AACd;AACA,UAAMC,GAAG,GAAG,KAAKC,OAAL,CAAaC,KAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACM,SAAKK,KAAL,CAAWN,YAAX,CAAwBC,GAAxB;AACN;;AACDM,EAAAA,MAAM,GAAG;AACR;AACA;AAEA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,WAAW,EAAC,gBAFb;AAGC,MAAA,GAAG,EAAKJ,KAAD,IAAS;AAAC,aAAKD,OAAL,GAAeC,KAAf;AAAqB,OAHvC;AAIC,MAAA,QAAQ,EAAE,KAAKH,YAAL,CAAkBQ,IAAlB,CAAuB,IAAvB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAUA;;AArBmC;;AAuBrC,eAAeV,MAAf","sourcesContent":["import React from 'react';\n\nclass Search extends React.Component {\n\tfilterUpdate() {\n\t\t//Here you will need to update the value of the filter with the value from the textbox\n\t\tconst val = this.myValue.value;\n\t\tconsole.log(val)\n        this.props.filterUpdate(val)\n\t}\n\trender() {\n\t\t//You will need to save the value from the textbox and update it as it changes\n\t\t//You will need the onChange value for the input tag to capture the textbox value\n\t\t\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tplaceholder=\"Type to Filter\" \n\t\t\t\t\tref = {(value)=>{this.myValue = value}}\n\t\t\t\t\tonChange={this.filterUpdate.bind(this)}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t);\n\t}\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}